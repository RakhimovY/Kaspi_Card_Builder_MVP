#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π (SQLite) –∏ cloud (PostgreSQL) –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

set -e

LOCAL_ENV=".env.local"
CLOUD_ENV=".env"
SCHEMA_FILE="prisma/schema.prisma"

echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

if [ -f "$LOCAL_ENV" ] && [ -f "$CLOUD_ENV" ]; then
    echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã –æ–±–∞ —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    CURRENT_PROVIDER=$(grep "provider = " "$SCHEMA_FILE" | head -1 | sed 's/.*provider = "\([^"]*\)".*/\1/')
    
    if [ "$CURRENT_PROVIDER" = "sqlite" ]; then
        echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ PostgreSQL (cloud)..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ö–µ–º—É –¥–ª—è PostgreSQL
        sed -i '' 's/provider = "sqlite"/provider = "postgresql"/' "$SCHEMA_FILE"
        sed -i '' 's/metadata          String?  \/\/ JSON as string for SQLite/metadata          Json?    \/\/ provider-specific data/' "$SCHEMA_FILE"
        sed -i '' 's/attributes  String?  \/\/ JSON as string for SQLite/attributes  Json?    \/\/ flexible attributes object/' "$SCHEMA_FILE"
        sed -i '' 's/metadata    String?  \/\/ JSON as string for SQLite/metadata    Json?    \/\/ EXIF, processing info/' "$SCHEMA_FILE"
        sed -i '' 's/rawJson   String   \/\/ JSON as string for SQLite/rawJson   Json     \/\/ full response from external service/' "$SCHEMA_FILE"
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º .env —Ñ–∞–π–ª—ã
        mv "$LOCAL_ENV" "$LOCAL_ENV.backup"
        mv "$CLOUD_ENV" "$LOCAL_ENV"
        mv "$LOCAL_ENV.backup" "$CLOUD_ENV"
        
        echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ PostgreSQL"
        echo "üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run prisma:migrate"
        
    elif [ "$CURRENT_PROVIDER" = "postgresql" ]; then
        echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ SQLite (–ª–æ–∫–∞–ª—å–Ω–∞—è)..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ö–µ–º—É –¥–ª—è SQLite
        sed -i '' 's/provider = "postgresql"/provider = "sqlite"/' "$SCHEMA_FILE"
        sed -i '' 's/metadata          Json?    \/\/ provider-specific data/metadata          String?  \/\/ JSON as string for SQLite/' "$SCHEMA_FILE"
        sed -i '' 's/attributes  Json?    \/\/ flexible attributes object/attributes  String?  \/\/ JSON as string for SQLite/' "$SCHEMA_FILE"
        sed -i '' 's/metadata    Json?    \/\/ EXIF, processing info/metadata    String?  \/\/ JSON as string for SQLite/' "$SCHEMA_FILE"
        sed -i '' 's/rawJson   Json     \/\/ full response from external service/rawJson   String   \/\/ JSON as string for SQLite/' "$SCHEMA_FILE"
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º .env —Ñ–∞–π–ª—ã
        mv "$CLOUD_ENV" "$CLOUD_ENV.backup"
        mv "$LOCAL_ENV" "$CLOUD_ENV"
        mv "$CLOUD_ENV.backup" "$LOCAL_ENV"
        
        echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ SQLite"
        echo "üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run prisma:db:push"
        
    else
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä: $CURRENT_PROVIDER"
        exit 1
    fi
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
    echo "üîß –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç..."
    npm run prisma:generate
    
    echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    
else
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç $LOCAL_ENV –∏ $CLOUD_ENV"
    exit 1
fi
