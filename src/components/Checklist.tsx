'use client';

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Checkbox } from '@/components/ui/checkbox';
import { useAppStore } from '@/lib/store';
import { useEffect } from 'react';
import { CheckCircle, AlertCircle } from 'lucide-react';

const CHECKLIST_PRESETS = {
  electronics: [
    { id: 'electronics-1', text: '–£–∫–∞–∑–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏' },
    { id: 'electronics-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∞—Ä–∞–Ω—Ç–∏–∏' },
    { id: 'electronics-3', text: '–£–∫–∞–∑–∞–Ω–∞ –º–æ—â–Ω–æ—Å—Ç—å/–µ–º–∫–æ—Å—Ç—å –±–∞—Ç–∞—Ä–µ–∏' },
    { id: 'electronics-4', text: '–ï—Å—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∏ –≤–µ—Å —Ç–æ–≤–∞—Ä–∞' },
    { id: 'electronics-5', text: '–£–∫–∞–∑–∞–Ω—ã —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –º–æ–¥–µ–ª–∏/—Å–∏—Å—Ç–µ–º—ã' },
    { id: 'electronics-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏' },
  ],
  clothing: [
    { id: 'clothing-1', text: '–£–∫–∞–∑–∞–Ω —Å–æ—Å—Ç–∞–≤ –º–∞—Ç–µ—Ä–∏–∞–ª–∞' },
    { id: 'clothing-2', text: '–ï—Å—Ç—å —Ä–∞–∑–º–µ—Ä–Ω–∞—è —Å–µ—Ç–∫–∞' },
    { id: 'clothing-3', text: '–£–∫–∞–∑–∞–Ω—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É' },
    { id: 'clothing-4', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏' },
    { id: 'clothing-5', text: '–£–∫–∞–∑–∞–Ω –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞' },
    { id: 'clothing-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∏–ª–µ/–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏' },
  ],
  cosmetics: [
    { id: 'cosmetics-1', text: '–£–∫–∞–∑–∞–Ω —Å–æ—Å—Ç–∞–≤ –ø—Ä–æ–¥—É–∫—Ç–∞' },
    { id: 'cosmetics-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ–±—ä–µ–º–µ/–≤–µ—Å–µ' },
    { id: 'cosmetics-3', text: '–£–∫–∞–∑–∞–Ω —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏' },
    { id: 'cosmetics-4', text: '–ï—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é' },
    { id: 'cosmetics-5', text: '–£–∫–∞–∑–∞–Ω—ã –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è' },
    { id: 'cosmetics-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
  ],
  home: [
    { id: 'home-1', text: '–£–∫–∞–∑–∞–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –∏ –≤–µ—Å' },
    { id: 'home-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ç–µ—Ä–∏–∞–ª–µ' },
    { id: 'home-3', text: '–£–∫–∞–∑–∞–Ω—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É' },
    { id: 'home-4', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ/—É—Å—Ç–∞–Ω–æ–≤–∫–µ' },
    { id: 'home-5', text: '–£–∫–∞–∑–∞–Ω–∞ –≥—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å/–Ω–∞–≥—Ä—É–∑–∫–∞' },
    { id: 'home-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∞—Ä–∞–Ω—Ç–∏–∏' },
  ],
  sports: [
    { id: 'sports-1', text: '–£–∫–∞–∑–∞–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –∏ –≤–µ—Å' },
    { id: 'sports-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ç–µ—Ä–∏–∞–ª–µ' },
    { id: 'sports-3', text: '–£–∫–∞–∑–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞' },
    { id: 'sports-4', text: '–ï—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é' },
    { id: 'sports-5', text: '–£–∫–∞–∑–∞–Ω —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏' },
    { id: 'sports-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' },
  ],
  books: [
    { id: 'books-1', text: '–£–∫–∞–∑–∞–Ω –∞–≤—Ç–æ—Ä –∏ –∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ' },
    { id: 'books-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å—Ç—Ä–∞–Ω–∏—Ü' },
    { id: 'books-3', text: '–£–∫–∞–∑–∞–Ω –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è' },
    { id: 'books-4', text: '–ï—Å—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è' },
    { id: 'books-5', text: '–£–∫–∞–∑–∞–Ω ISBN' },
    { id: 'books-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ' },
  ],
  toys: [
    { id: 'toys-1', text: '–£–∫–∞–∑–∞–Ω –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω' },
    { id: 'toys-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ç–µ—Ä–∏–∞–ª–µ' },
    { id: 'toys-3', text: '–£–∫–∞–∑–∞–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –∏–≥—Ä—É—à–∫–∏' },
    { id: 'toys-4', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' },
    { id: 'toys-5', text: '–£–∫–∞–∑–∞–Ω —Ç–∏–ø –∏–≥—Ä—É—à–∫–∏' },
    { id: 'toys-6', text: '–ï—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É' },
  ],
  other: [
    { id: 'other-1', text: '–£–∫–∞–∑–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏' },
    { id: 'other-2', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–∞—Ö/–≤–µ—Å–µ' },
    { id: 'other-3', text: '–£–∫–∞–∑–∞–Ω –º–∞—Ç–µ—Ä–∏–∞–ª/—Å–æ—Å—Ç–∞–≤' },
    { id: 'other-4', text: '–ï—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é' },
    { id: 'other-5', text: '–£–∫–∞–∑–∞–Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)' },
    { id: 'other-6', text: '–ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
  ],
};

export default function Checklist() {
  const { formData, checklist, setChecklist, toggleItem } = useAppStore();

  useEffect(() => {
    // Update checklist when category changes
    if (formData.category && CHECKLIST_PRESETS[formData.category as keyof typeof CHECKLIST_PRESETS]) {
      const newChecklist = CHECKLIST_PRESETS[formData.category as keyof typeof CHECKLIST_PRESETS].map(item => ({
        ...item,
        completed: false,
      }));
      setChecklist(newChecklist);
    } else {
      setChecklist([]);
    }
  }, [formData.category, setChecklist]);

  const completedCount = checklist.filter(item => item.completed).length;
  const totalCount = checklist.length;
  const completionPercentage = totalCount > 0 ? (completedCount / totalCount) * 100 : 0;

  const getCompletionStatus = () => {
    if (completionPercentage === 100) {
      return { icon: CheckCircle, color: 'text-green-600', text: '–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!' };
    } else if (completionPercentage >= 80) {
      return { icon: CheckCircle, color: 'text-yellow-600', text: '–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!' };
    } else {
      return { icon: AlertCircle, color: 'text-red-600', text: '–¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏' };
    }
  };

  const status = getCompletionStatus();
  const StatusIcon = status.icon;

  return (
    <Card className="bg-white/80 backdrop-blur-sm border-blue-200 shadow-lg">
      <CardHeader className="pb-3">
        <CardTitle className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <CheckCircle className="w-5 h-5 text-blue-600" />
            <span>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π Kaspi</span>
          </div>
          {totalCount > 0 && (
            <span className="text-sm font-normal text-gray-500">
              {completedCount}/{totalCount}
            </span>
          )}
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        {!formData.category ? (
          <div className="text-center py-8">
            <AlertCircle className="w-16 h-16 mx-auto mb-4 text-blue-300" />
            <p className="text-gray-600 font-medium">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ–∫-–ª–∏—Å—Ç–∞</p>
          </div>
        ) : checklist.length === 0 ? (
          <div className="text-center py-8">
            <div className="w-8 h-8 border-2 border-blue-300 border-t-blue-600 rounded-full animate-spin mx-auto mb-4" />
            <p className="text-gray-600 font-medium">–ó–∞–≥—Ä—É–∑–∫–∞ —á–µ–∫-–ª–∏—Å—Ç–∞...</p>
          </div>
        ) : (
          <>
            {/* Progress Indicator */}
            <div className="flex items-center gap-3 p-4 bg-blue-50/50 rounded-lg border border-blue-100">
              <StatusIcon className={`w-5 h-5 ${status.color}`} />
              <div className="flex-1">
                <p className={`text-sm font-medium ${status.color}`}>{status.text}</p>
                <div className="w-full bg-gray-200 rounded-full h-2.5 mt-2">
                  <div
                    className="bg-gradient-to-r from-blue-500 to-blue-600 h-2.5 rounded-full transition-all duration-300 shadow-sm"
                    style={{ width: `${completionPercentage}%` }}
                  />
                </div>
              </div>
              <span className="text-sm font-bold text-gray-700 bg-white px-2 py-1 rounded">
                {Math.round(completionPercentage)}%
              </span>
            </div>

            {/* Checklist Items */}
            <div className="space-y-2 max-h-48 lg:max-h-64 overflow-y-auto component-scrollbar">
              {checklist.map((item) => (
                <div key={item.id} className="flex items-start gap-3 p-3 hover:bg-blue-50/50 rounded-lg border border-transparent hover:border-blue-100 transition-all">
                  <Checkbox
                    checked={item.completed}
                    onCheckedChange={() => toggleItem(item.id)}
                    className="mt-0.5"
                  />
                  <label
                    className={`text-sm cursor-pointer flex-1 leading-relaxed ${
                      item.completed ? 'line-through text-gray-500' : 'text-gray-700'
                    }`}
                    onClick={() => toggleItem(item.id)}
                  >
                    {item.text}
                  </label>
                </div>
              ))}
            </div>

            {/* Tips */}
            {completionPercentage < 100 && (
              <div className="p-4 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg">
                <p className="text-sm text-blue-800 leading-relaxed">
                  <strong>üí° –°–æ–≤–µ—Ç:</strong> –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∏ –æ—Ç–º–µ—Ç—å—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ Kaspi.
                </p>
              </div>
            )}
          </>
        )}
      </CardContent>
    </Card>
  );
}
