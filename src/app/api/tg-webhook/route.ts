import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('Telegram webhook received:', JSON.stringify(body, null, 2));
    
    // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    const message = body.message;
    if (message && message.text) {
      const chatId = message.chat.id;
      const text = message.text.toLowerCase();
      
      let responseText = '';
      
      if (text.includes('–ø—Ä–∏–≤–µ—Ç') || text.includes('hello') || text.includes('—Å–∞–ª–µ–º')) {
        responseText = '–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Kaspi Card Builder!';
      } else if (text.includes('–ø–æ–º–æ—â—å') || text.includes('help') || text.includes('–∫”©–º–µ–∫')) {
        responseText = `ü§ñ Kaspi Card Builder Bot

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
/status - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
/pricing - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö

–°–∞–π—Ç: https://kaspi-card-builder.com
–ü–æ–¥–¥–µ—Ä–∂–∫–∞: @kaspi_card_builder`;
      } else if (text.includes('—Å—Ç–∞—Ç—É—Å') || text.includes('status')) {
        responseText = '‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç.';
      } else if (text.includes('—Ç–∞—Ä–∏—Ñ') || text.includes('pricing') || text.includes('–±–∞“ì–∞')) {
        responseText = `üí∞ –¢–∞—Ä–∏—Ñ—ã Kaspi Card Builder:

üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω:
‚Ä¢ –î–æ 50 —Ñ–æ—Ç–æ/–º–µ—Å—è—Ü
‚Ä¢ –ë–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç ZIP/CSV

üíé Pro –ø–ª–∞–Ω (9,900 ‚Ç∏/–º–µ—Å—è—Ü):
‚Ä¢ –î–æ 500 —Ñ–æ—Ç–æ/–º–µ—Å—è—Ü
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://kaspi-card-builder.com/pricing`;
      } else if (text.includes('start') || text === '/start') {
        responseText = `üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Kaspi Card Builder!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è Kaspi Marketplace.

–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
üì∏ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞
‚úçÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏–π
üì¶ –≠–∫—Å–ø–æ—Ä—Ç –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ

–ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É: https://kaspi-card-builder.com/studio

–ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.`;
      } else {
        responseText = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, —Å–∫–æ—Ä–æ! üéâ\n\n–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ–±-–≤–µ—Ä—Å–∏—é: https://kaspi-card-builder.com';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ Telegram
      const telegramResponse = await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: responseText,
          parse_mode: 'HTML',
        }),
      });
      
      if (!telegramResponse.ok) {
        console.error('Failed to send Telegram message:', await telegramResponse.text());
      }
    }
    
    // –û—Ç–≤–µ—á–∞–µ–º Telegram API
    return NextResponse.json({ ok: true });
    
  } catch (error) {
    console.error('Telegram webhook error:', error);
    return NextResponse.json({ ok: false, error: 'Internal server error' }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({ 
    message: 'Telegram webhook endpoint is active',
    status: 'ok',
    timestamp: new Date().toISOString()
  });
}
